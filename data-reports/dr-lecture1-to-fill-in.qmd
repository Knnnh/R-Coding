---
title: "Toy Data Report 1"
author: "Marc Kaufmann"
format: html
editor: visual
---

# Notes

Anything labeled a *Note* should not be in an actual data report, but serves only as commentary for pedagogical purposes. 

*Note:* Change the name of the author to your own name.
 
# Dataset

**Source**: first class of *Introduction to Data Analysis in R* (2024). The instructor asked the students present to raise their hand for each of the programming languages that they had heard of.

```{r}
list_of_programming_languages <- c(
"R",
"SQL",
"Racket",
"Lisp",
"JavaScript",
"ECMAScript",
"Julia",
"bash",
"$tata",
"C",
"Perl",
"Logo",
"Scratch", 
"Rust",
"Python"
)

languages_heard_of <- c()
```

# Cleaning

Given the simplicity of the dataset, there is not much cleaning necessary in terms of removing outliers. However, there are several things we can do to simplify later data analysis:

1.  The instructor misspelled Stata as \$tata (truly hilarious), which we should rename.
2.  The data is currently stored in two separate vectors. It is better to store it instead in a single data frame with a column for the programming language and the number of students who have heard of it
3.  We should record the total number of students present - which seems like an important quantity.

**Note:** In general we should write the data to a file. Here we won't do it, since it is toy data and we already use enough code that you haven't seen. 

```{r cleaning}

```

# Exploration

Let's rank the languages from most to least well-known and let us compute the average number of students who know any language, as well as the average number of languages a student knows.

**Note:** For the ranking, we will use the `arrange` function from the `dplyr` package, which we will see in more detail in a later lecture. It arranges a dataframe in the order of the column provided:

**Note:** As this is the first report, we skip the visualization. 

**Note:** Once you filled in the missing pieces ('...'), you should remove the `#| eval: false` at the top, otherwise the code does not get run, so the later code won't work.

```{r exploration}
#| output: false
#| eval: false
library(dplyr)

pls_ranked <- ...

avg_n_students <- ...
avg_n_languages <- ...
```

# Conclusions

The most well-known programming language is ... with ... students knowing the language â€” in percentage terms, this corresponds to ...%.

Moreover, students know on average ... of the ... languages they were asked about.

Follow-up questions:

...

